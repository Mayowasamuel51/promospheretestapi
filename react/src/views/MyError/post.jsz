import axios from "axios";
import axiosclinet from "../axios-clinet";
import { v4 } from "uuid";
import { useEffect, useState } from "react";
import {
    ref,
    uploadBytes,
    getDownloadURL,
    listAll,
    list,
} from "firebase/storage";
import { storage } from "../../firebase";
import { useStateContext } from "../contexts/ContextProvider";

const Post = () => {
    const [imageUpload, setImageUpload] = useState(null);
    const [imageUrls, setImageUrls] = useState([]);

    const { user, token } = useStateContext();
    const [forminput, setForminput] = useState({
        productname: '',
        productprice: '',
        name: user.name,
    })
    const handlforminput = (e) => {
        setForminput({ ...forminput, [e.target.name]: e.target.value })
    }
    const [file, setFile] = useState(null);

    const handleFileUpload = (e) => {
        setFile(e.target.files[0]);
    };
    // const fileRef = ref(storage, "../images/name.jpg");
    const submitpost = async (e) => {
        //     e.preventDefault();
        //     //  we need to submit the meta data to laravel/mysql  checked,
        //     // we need to send the images to firebase cloud storage
        //     const laravel_mysql = {
        //         // user_id:user.id,
        //         price: forminput.productprice,
        //         productName: forminput.productname
        //     }
        //     const formData = new FormData();
        //     formData.append("file", file);

        //     const response = await fetch("gs://mypromosphere-test.appspot.com", {
        //         method: "POST",
        //         mode: 'no-cors',
        //         headers: {
        //             "Content-Type": "multipart/form-data",
        //         },
        //         body: formData,
        //     });

        //     if (response.status === 200) {
        //         // The file was uploaded successfully.
        //         alert("file uploaded successfully")
        //     } else {
        //         // The file upload failed.
        //     }
        //     // axiosclinet.post(`/api/images/${user.id}`, laravel_mysql, {
        //     //     headers: {
        //     //         'Accept': 'application/vnd.api+json',
        //     //         'Authorization': `Bearer ${token}`
        //     //     },
        //     // }).then((res) => {

        //     // }).catch((err) => console.log('error', err.message))
        // }
    }
    const imagesListRef = ref(storage, "images/");
    const uploadFile = () => {
        if (imageUpload == null) return;
        const imageRef = ref(storage, `images/${imageUpload.name + ' ' + user.email + v4()}`);
        uploadBytes(imageRef, imageUpload).then((snapshot) => {
            getDownloadURL(snapshot.ref).then((url) => {
                // const laravel_mysql = {
                //     user_id: user.id,
                //     titleImageUrl:url,
                //     price: forminput.productprice,
                //     productName: forminput.productname
                // }
                // axiosclinet.post(`/api/images/${user.id}`, laravel_mysql, {
                //     headers: {
                //         'Accept': 'application/vnd.api+json',
                //         'Authorization': `Bearer ${token}`
                //     },
                // }).then((res) => {
        
                // }).catch((err) => console.log('error', err.message))
                setImageUrls((prev) => [...prev, url]);
            });
        });
    };

    const [uploadProgress, setUploadProgress] = useState([]);
    const [error, setError] = useState(null);

    const [files, setFiles] = useState([]);
    // const [error, setError] = useState(null);
    // const handleUploadClick = async () => {
    //     const files = event.target.files;

    //     // Upload each file to Firebase Storage.
    //     const uploadPromises = [];

    //     for (const file of files) {
    //         uploadPromises.push(
    //             uploadBytes(ref(storage,`imagesmutiple/${file.name + ' ' + user.email}}`), file, {
    //                 onUploadProgress: (progressEvent) => {
    //                     const progress = (progressEvent.loaded / progressEvent.total) * 100;
    //                     setUploadProgress((prevUploadProgress) => {
    //                         const newUploadProgress = [...prevUploadProgress];
    //                         newUploadProgress[file.name] = progress;
    //                         return newUploadProgress;
    //                     });
    //                 },
    //             })
    //         );
    //     }

    //     // Wait for all of the uploads to complete. 
    //     try {
    //         await Promise.all(uploadPromises);
    //     } catch (error) {
    //         // An upload failed.
    //         setError(error);
    //     }
    // }
    const handleChange = (event) => {
        const files = event.target.files;
        setFiles(files);
    };

    // const UploadForm = () => {
    //     const handleChange = (event) => {
    //         const files = event.target.files;
    //         setFiles(files);
    //     };
    // }

    const posting = async (e) => {
        e.preventDefault()
        const uploadPromises = [];
        for (const file of files) {
            uploadPromises.push(
                uploadBytes(ref(storage, `${file.name + ' ' + user.name + v4()}`), file).then((snapshot) => {
                    getDownloadURL(snapshot.ref).then((url) => {
                       
                        const laravel_mysql = {
                            muitpleimages: url,
                            user_id: user.id,
                            // titleImageUrl:url,
                            price: forminput.productprice,
                            productName: forminput.productname
                        }
                        console.log(url[0])
                        axiosclinet.post(`/api/images/${user.id}`, laravel_mysql, {
                            headers: {
                                'Accept': 'application/vnd.api+json',
                                'Authorization': `Bearer ${token}`
                            },
                        }).then((res) => {
                            if (res.status.data === 200) {
                                alert('successfully!!!!!')
                            }
                        }).catch((err) => console.log('error', err.message))
                    })
                })
            );
            console.log(file)
        }
        try {
            await Promise.all(uploadPromises);
        } catch (error) {
            setError(error);
        }

        if (!error) {
            // Display a success message or redirect to another page.
        } else {
            // Display an error message to the user.
        }
        uploadFile()
        // const laravel_mysql = {
        //     user_id: user.id,
        //     titleIMage: imageUpload,
        //     multipleIMage: files,
        //     price: forminput.productprice,
        //     productName: forminput.productname
        // }
        // axiosclinet.post(`/api/images/${user.id}`, laravel_mysql, {
        //     headers: {
        //         'Accept': 'application/vnd.api+json',
        //         'Authorization': `Bearer ${token}`
        //     },
        // }).then((res) => {

        // }).catch((err) => console.log('error', err.message))
    }
    // useEffect(() => {
    //     list(imagesListRef).then((response) => {
    //         response.items.forEach((item) => {
    //             getDownloadURL(item).then((url) => {
    //                 console.log(item._location.path_)
    //                 console.log(url)
    //                 setImageUrls((prev) => [...prev, url]);
    //             });
    //         });
    //     });
    // }, []);

    // i can do a filter to or find array for a specfic person imaages
    return (
        <div style={{ marginTop: '59px' }}>
            {/* {imageUrls.map((url) => {
                return (
                    <div key={url}>
                        <h1>{url }</h1>
                          <img src={url} style={{ width: '30%' }} />
                    </div>
                ); */}
            {/* })} */}
            {/* {imageUrls.find((item) => {
                return item.
            })} */}
            {forminput.name}
            {user.name}
            {user.id}
            <form onSubmit={posting}>


                <input type="file" multiple onChange={(event) => {
                    setImageUpload(event.target.files[0]);
                }} placeholder="file upload magor" /> <br />  <br />
                <input name="productname" value={forminput.productname} onChange={handlforminput} type="text" placeholder="productname" /> <br />  <br />
                <input name="productprice" type="text" value={forminput.productprice} onChange={handlforminput} placeholder="productprice" />

                <button type="submit">save</button>


                {/* single image , then muitple up to 4
                showing when uploading,
                alert for successfully upload image
                able to review there post 
                */}
                <input type="file" multiple onChange={handleChange} />
            </form>

            {/* <input type="file" multiple onChange={handleUploadClick} />

            {uploadProgress.map((progress, index) => (
                <div key={index}>{progress}%</div>
            ))}

            {error && <div>{error.message}</div>} */}
        </div>
    )
}



export default Post;